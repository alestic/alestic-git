

                          Alestic Git Server
                        running a new instance

This is a sample explanation of how to set up a git server with
gitolite on Ubuntu on Amazon EC2.

This is very preliminary and has not been tested much.  Before you
think of using this, you should already understand how to use and the
tradeoffs involved with: git, gitolite, Amazon EC2.  This includes the
fact that Amazon EC2 instances sometimes fail, so you should have
plans for creating snapshots of your EBS volume(s) on the git server
and backups of your git repositories.


# Download the latest Alestic Git user-data script

  curl -s -O \
   https://github.com/alestic/alestic-git/raw/master/bin/alestic-git.user-data

# Start a new Ubuntu 10.10 EC2 instance with user-data to configure it
# on boot.  This exmample assumes you have uploaded to EC2 an ssh key
# with your username as described in http://alestic.com/2010/10/ec2-ssh-keys

  keypair=$USER
  instance_type=t1.micro

  ami_id=ami-ccf405a5
  region=us-east-1
  zone=${region}b

  user_data_file=alestic-git.user-data
  instance_id=$(                                  \
    ec2-run-instances                             \
      --instance-type "$instance_type"            \
      --region $region                            \
      --availability-zone "$zone"                 \
      --key "$keypair"                            \
      --instance-initiated-shutdown-behavior stop \
      --user-data-file "$user_data_file"          \
      "$ami_id" |
    egrep ^INSTANCE | cut -f2)
  echo instance_id=$instance_id

# If this is temporary for testing, schedule it to die

  echo ec2kill "$instance_id" | at now +55min

# Add an instance tag, if you wish

  ec2-create-tags --tag Name="Alestic Git server" $instance_id

# If this is to be a permanent git server, associate Elastic IP
# address, and add to DNS, set up cron job to snapshot root EBS
# volume, ...

  # [left as an exercise for the reader]

# Wait for the instance to start running and get the IP address

  while host=$(ec2-describe-instances "$instance_id" |
    egrep "^INSTANCE.*running" | cut -f17); test -z "$host"; do sleep 1; done
  echo host=$host

# Watch the setup and installation and wait for it to complete.

  ssh ubuntu@$host tail -F /var/log/user-data.log

# You might want to reboot the instance to pick up any kernel upgrades

  ec2-reboot-instances $instance_id
